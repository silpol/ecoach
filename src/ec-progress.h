/* Generated by GOB (v2.0.16)   (do not edit directly) */

#include <glib.h>
#include <glib-object.h>


#include "config.h"
#include <glib/gi18n.h>
#include <gtk/gtkdrawingarea.h>
#include <gtk/gtkeventbox.h>
#include <gtk/gtklabel.h>
#include <gtk/gtkvbox.h>

#ifndef __EC_PROGRESS_H__
#define __EC_PROGRESS_H__

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/*
 * Type checking and casting macros
 */
#define EC_TYPE_PROGRESS	(ec_progress_get_type())
#define EC_PROGRESS(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), ec_progress_get_type(), EcProgress)
#define EC_PROGRESS_CONST(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), ec_progress_get_type(), EcProgress const)
#define EC_PROGRESS_CLASS(klass)	G_TYPE_CHECK_CLASS_CAST((klass), ec_progress_get_type(), EcProgressClass)
#define EC_IS_PROGRESS(obj)	G_TYPE_CHECK_INSTANCE_TYPE((obj), ec_progress_get_type ())

#define EC_PROGRESS_GET_CLASS(obj)	G_TYPE_INSTANCE_GET_CLASS((obj), ec_progress_get_type(), EcProgressClass)

/* Private structure type */
typedef struct _EcProgressPrivate EcProgressPrivate;

/*
 * Main object structure
 */
#ifndef __TYPEDEF_EC_PROGRESS__
#define __TYPEDEF_EC_PROGRESS__
typedef struct _EcProgress EcProgress;
#endif
struct _EcProgress {
	GtkVBox __parent__;
	/*< private >*/
	EcProgressPrivate *_priv;
};

/*
 * Class definition
 */
typedef struct _EcProgressClass EcProgressClass;
struct _EcProgressClass {
	GtkVBoxClass __parent__;
};


/*
 * Public methods
 */
GType	ec_progress_get_type	(void) G_GNUC_CONST;
#line 45 "ec-progress.gob"
gboolean 	ec_progress_get_use_markup	(EcProgress * self);
#line 65 "ec-progress.h"
#line 32 "ec-progress.gob"
void 	ec_progress_set_use_markup	(EcProgress * self,
					gboolean val);
#line 69 "ec-progress.h"
#line 69 "ec-progress.gob"
gchar * 	ec_progress_get_label_text	(EcProgress * self);
#line 72 "ec-progress.h"
#line 54 "ec-progress.gob"
void 	ec_progress_set_label_text	(EcProgress * self,
					gchar * val);
#line 76 "ec-progress.h"
#line 94 "ec-progress.gob"
gdouble 	ec_progress_get_progress_val	(EcProgress * self);
#line 79 "ec-progress.h"
#line 90 "ec-progress.gob"
void 	ec_progress_set_progress_val	(EcProgress * self,
					gdouble val);
#line 83 "ec-progress.h"
#line 111 "ec-progress.gob"
gint 	ec_progress_get_margin_x	(EcProgress * self);
#line 86 "ec-progress.h"
#line 107 "ec-progress.gob"
void 	ec_progress_set_margin_x	(EcProgress * self,
					gint val);
#line 90 "ec-progress.h"
#line 128 "ec-progress.gob"
gint 	ec_progress_get_margin_y	(EcProgress * self);
#line 93 "ec-progress.h"
#line 124 "ec-progress.gob"
void 	ec_progress_set_margin_y	(EcProgress * self,
					gint val);
#line 97 "ec-progress.h"
#line 145 "ec-progress.gob"
gint 	ec_progress_get_progress_margin_y	(EcProgress * self);
#line 100 "ec-progress.h"
#line 141 "ec-progress.gob"
void 	ec_progress_set_progress_margin_y	(EcProgress * self,
					gint val);
#line 104 "ec-progress.h"
#line 203 "ec-progress.gob"
GtkWidget * 	ec_progress_new	(void);
#line 107 "ec-progress.h"
#line 215 "ec-progress.gob"
GtkWidget * 	ec_progress_new_with_label	(gchar * text);
#line 110 "ec-progress.h"
#line 229 "ec-progress.gob"
void 	ec_progress_set_progress_image	(EcProgress * self,
					const gchar * path);
#line 114 "ec-progress.h"
#line 260 "ec-progress.gob"
void 	ec_progress_set_bg_image	(EcProgress * self,
					const gchar * path);
#line 118 "ec-progress.h"
#line 290 "ec-progress.gob"
void 	ec_progress_set_progress_bg_image	(EcProgress * self,
					const gchar * path);
#line 122 "ec-progress.h"
#line 332 "ec-progress.gob"
void 	ec_progress_set_bg_color	(EcProgress * self,
					const GdkColor * color);
#line 126 "ec-progress.h"
#line 360 "ec-progress.gob"
void 	ec_progress_set_fg_color	(EcProgress * self,
					const GdkColor * color);
#line 130 "ec-progress.h"

/*
 * Argument wrapping macros
 */
#if defined(__GNUC__) && !defined(__STRICT_ANSI__)
#define EC_PROGRESS_PROP_USE_MARKUP(arg)    	"use_markup", __extension__ ({gboolean z = (arg); z;})
#define EC_PROGRESS_GET_PROP_USE_MARKUP(arg)	"use_markup", __extension__ ({gboolean *z = (arg); z;})
#define EC_PROGRESS_PROP_LABEL_TEXT(arg)    	"label_text", __extension__ ({gchar *z = (arg); z;})
#define EC_PROGRESS_GET_PROP_LABEL_TEXT(arg)	"label_text", __extension__ ({gchar **z = (arg); z;})
#define EC_PROGRESS_PROP_PROGRESS_VAL(arg)    	"progress_val", __extension__ ({gdouble z = (arg); z;})
#define EC_PROGRESS_GET_PROP_PROGRESS_VAL(arg)	"progress_val", __extension__ ({gdouble *z = (arg); z;})
#define EC_PROGRESS_PROP_MARGIN_X(arg)    	"margin_x", __extension__ ({gint z = (arg); z;})
#define EC_PROGRESS_GET_PROP_MARGIN_X(arg)	"margin_x", __extension__ ({gint *z = (arg); z;})
#define EC_PROGRESS_PROP_MARGIN_Y(arg)    	"margin_y", __extension__ ({gint z = (arg); z;})
#define EC_PROGRESS_GET_PROP_MARGIN_Y(arg)	"margin_y", __extension__ ({gint *z = (arg); z;})
#define EC_PROGRESS_PROP_PROGRESS_MARGIN_Y(arg)    	"progress_margin_y", __extension__ ({gint z = (arg); z;})
#define EC_PROGRESS_GET_PROP_PROGRESS_MARGIN_Y(arg)	"progress_margin_y", __extension__ ({gint *z = (arg); z;})
#else /* __GNUC__ && !__STRICT_ANSI__ */
#define EC_PROGRESS_PROP_USE_MARKUP(arg)    	"use_markup",(gboolean )(arg)
#define EC_PROGRESS_GET_PROP_USE_MARKUP(arg)	"use_markup",(gboolean *)(arg)
#define EC_PROGRESS_PROP_LABEL_TEXT(arg)    	"label_text",(gchar *)(arg)
#define EC_PROGRESS_GET_PROP_LABEL_TEXT(arg)	"label_text",(gchar **)(arg)
#define EC_PROGRESS_PROP_PROGRESS_VAL(arg)    	"progress_val",(gdouble )(arg)
#define EC_PROGRESS_GET_PROP_PROGRESS_VAL(arg)	"progress_val",(gdouble *)(arg)
#define EC_PROGRESS_PROP_MARGIN_X(arg)    	"margin_x",(gint )(arg)
#define EC_PROGRESS_GET_PROP_MARGIN_X(arg)	"margin_x",(gint *)(arg)
#define EC_PROGRESS_PROP_MARGIN_Y(arg)    	"margin_y",(gint )(arg)
#define EC_PROGRESS_GET_PROP_MARGIN_Y(arg)	"margin_y",(gint *)(arg)
#define EC_PROGRESS_PROP_PROGRESS_MARGIN_Y(arg)    	"progress_margin_y",(gint )(arg)
#define EC_PROGRESS_GET_PROP_PROGRESS_MARGIN_Y(arg)	"progress_margin_y",(gint *)(arg)
#endif /* __GNUC__ && !__STRICT_ANSI__ */


#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif
